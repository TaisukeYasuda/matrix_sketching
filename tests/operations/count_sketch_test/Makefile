# A sample Makefile for building Google Test and using it in user
# tests.  Please tweak it to suit your environment and project.  You
# may want to move it to your project's root directory.
#
# SYNOPSIS:
#
#   make [all]  - makes everything.
#   make TARGET - makes the given target.
#   make clean  - removes all files generated by make.

# Please tweak the following variable definitions as needed by your
# project, except GTEST_HEADERS, which you can use in your own targets
# but shouldn't modify.

# Points to the root of Google Test, relative to where this file is.
# Remember to tweak this if you move this file.
# GTEST_DIR = ../../../google_test/

# # Where to find user code.
# USER_DIR = ./
# USER_DIR_MATRIX = ../armadillo
# DEP_H = Arm_interface.hpp
# # Flags passed to the preprocessor.
# # Set Google Test's header directory as a system directory, such that
# # the compiler doesn't generate warnings in Google Test headers.
# CPPFLAGS +=
# CXX = g++
# # Flags passed to the C++ compiler.
# CXXFLAGS += -g -Wall -Wextra -std=c++14 -O2

# # All tests produced by this Makefile.  Remember to add new tests you
# # created to the list.
# TESTS = test

# LD_FLAGS = -larmadillo -framework Accelerate
# # House-keeping build targets.

# all : $(TESTS)

# clean :
# 	rm -f $(TESTS) *.o

# sample1_unittest.o : $(USER_DIR)/sketching.cpp
# 	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(USER_DIR)/sketching.cpp

# test : sketching.o
# 	$(CXX) $(CPPFLAGS) $(CXXFLAGS) $^ -o $@ $(LD_FLAGS)


CXX = g++
CXXFLAGS = -std=c++1y -Wall -g 

BOOST_LIB_PATH = -I /usr/local/include/ -I ~/Desktop/armadillo/include -DARMA_DONT_USE_WRAPPER

# INTERFACE = -I ../interface
INTERFACE = -I ../../../sketchy/
# BOOST_INTERFACE = -I ../boost
LDLIBS = -larmadillo -lblas -llapack /usr/lib/libarpack.so.2

#-O3 -D -DNDEBUG -DBOOST_UBLAS_NDEBUG
operations_test: operations_test.o
	$(CXX) $(CXXFLAGS) -o operations_test operations_test.o $(LDLIBS)

operations_test.o: operations_test.cpp
	# $(CXX) $(CXXFLAGS) $(BOOST_LIB_PATH) $(BOOST_INTERFACE) -c operations_test.cpp
	$(CXX) $(CXXFLAGS) $(BOOST_LIB_PATH) $(INTERFACE) -c operations_test.cpp



.PHONY: clean
clean:
	rm -f *.o a.out core main operations_test

.PHONY: all
all: clean main
